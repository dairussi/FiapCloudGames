// <auto-generated />
using System;
using FiapCloudGames.Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiapCloudGames.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251009022021_addpromotion")]
    partial class addpromotion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiapCloudGames.Domain.Games.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("FiapCloudGames.Domain.Promotions.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("FiapCloudGames.Domain.Users.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FiapCloudGames.Domain.Games.Entities.Game", b =>
                {
                    b.OwnsOne("FiapCloudGames.Domain.Games.ValueObjects.AgeRating", "AgeRating", b1 =>
                        {
                            b1.Property<int>("GameId")
                                .HasColumnType("int");

                            b1.Property<int>("MinimiumAge")
                                .HasColumnType("int")
                                .HasColumnName("MinimumAge");

                            b1.Property<string>("Rating")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("AgeRating");

                            b1.HasKey("GameId");

                            b1.ToTable("Game");

                            b1.WithOwner()
                                .HasForeignKey("GameId");
                        });

                    b.OwnsOne("FiapCloudGames.Domain.Games.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("GameId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal")
                                .HasColumnName("Price");

                            b1.HasKey("GameId");

                            b1.ToTable("Game");

                            b1.WithOwner()
                                .HasForeignKey("GameId");
                        });

                    b.Navigation("AgeRating")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("FiapCloudGames.Domain.Promotions.Entities.Promotion", b =>
                {
                    b.OwnsOne("FiapCloudGames.Domain.Promotions.ValueObjects.DiscountRule", "DiscountRule", b1 =>
                        {
                            b1.Property<int>("PromotionId")
                                .HasColumnType("int");

                            b1.Property<decimal>("FixedAmount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("FixedAmount");

                            b1.Property<decimal>("Percentage")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("Percentage");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("DiscountType");

                            b1.HasKey("PromotionId");

                            b1.ToTable("Promotion");

                            b1.WithOwner()
                                .HasForeignKey("PromotionId");
                        });

                    b.OwnsOne("FiapCloudGames.Domain.Promotions.ValueObjects.ValidityPeriod", "Period", b1 =>
                        {
                            b1.Property<int>("PromotionId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndDate");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartDate");

                            b1.HasKey("PromotionId");

                            b1.ToTable("Promotion");

                            b1.WithOwner()
                                .HasForeignKey("PromotionId");
                        });

                    b.Navigation("DiscountRule")
                        .IsRequired();

                    b.Navigation("Period")
                        .IsRequired();
                });

            modelBuilder.Entity("FiapCloudGames.Domain.Users.Entities.User", b =>
                {
                    b.OwnsOne("FiapCloudGames.Domain.Users.ValueObjects.EmailAddress", "Email", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("nvarchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.HasIndex("Email")
                                .IsUnique();

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("FiapCloudGames.Domain.Users.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("FullName");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("FiapCloudGames.Domain.Users.ValueObjects.NickName", "NickName", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Nick")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("NickName");

                            b1.HasKey("UserId");

                            b1.HasIndex("Nick")
                                .IsUnique();

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("NickName")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
